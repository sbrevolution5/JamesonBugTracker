@model JamesonBugTracker.Models.Ticket

@{
    ViewData["Title"] = "Details";
}
@using Microsoft.AspNetCore.Identity;
@using JamesonBugTracker.Services.Interfaces;
@inject UserManager<BTUser> _userManager
@inject IBTProjectService _projectService
@section Header{
    <link rel="stylesheet" href="~/plugins/summernote/summernote-bs4.min.css">
}
<!-- Default box -->
<div class="card mt-3 shadow-sm">
    <div class="card-header">
        <h3 class="card-title">@Model.Title</h3>
        <div class="nav-links text-right">
            @if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
            {

                <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> <span>|</span>
            }
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-12 col-md-12 col-lg-8 order-2 order-md-1">
                <div class="row">
                    <div class="col-12 col-sm-3">
                        <div class="small-box bg-gradient-red">
                            <div class="inner">
                                <h3>Owner:</h3>
                                <p>@Model.OwnerUser?.FullName</p>
                            </div>
                            <div class="icon">
                                <i class="fas fa-user-plus"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-3">
                        <div class="small-box bg-gradient-blue">
                            <div class="inner">

                                <h3>Created</h3>
                                <p>@string.Format("{0:MMM dd yyyy}", Model.Created)</p>

                            </div>
                            <div class="icon">
                                <i class="fas fa-calendar"></i>
                            </div>
                        </div>
                    </div>
                    @* Conditional formatting based on status *@
                    <div class="col-12 col-sm-3">
                        <div class="small-box" id="ticketStatusBox">
                            <div class="inner">

                                <h3>Status:</h3>
                                <p id="ticketStatusText">@Model.TicketStatus.Name</p>


                            </div>
                            <div class="icon">
                                <i class="far fa-check-circle"></i>
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-sm-3">
                        <div class="small-box bg-info">
                            <div class="inner">
                                <h3>Assigned to:</h3>
                                @if (Model.DeveloperUserId is not null)
                                {
                                    <p>@Model.DeveloperUser?.FullName</p>

                                }
                                else
                                {
                                    <p>Unassigned</p>

                                }
                            </div>
                            <div class="icon">
                                <i class="far fa-address-card"></i>
                            </div>
                        </div>
                    </div>
                </div>
                @if (Model.TicketStatus.Name == "Development")
                {
                    <form asp-action="UpdateStatus">
                        <input hidden name="ticketId" value="@Model.Id" />
                        <input hidden name="statusName" value="Testing" />
                        <button class="btn btn-block btn-warning" type="submit">Update to Testing</button>
                    </form>
                }
                else if (Model.TicketStatus.Name == "Testing")
                {
                    <form asp-action="UpdateStatus">
                        <input hidden name="ticketId" value="@Model.Id" />
                        <input hidden name="statusName" value="Development" />
                        <button class="btn btn-block btn-danger" type="submit">Testing Failed: Return to Development</button>
                    </form>
                    <hr />
                    <form asp-action="UpdateStatus">
                        <input hidden name="ticketId" value="@Model.Id" />
                        <input hidden name="statusName" value="Resolved" />
                        <button class="btn btn-block btn-success" type="submit">Close Ticket</button>
                    </form>
                }
                else if (Model.TicketStatus.Name == "Resolved" && (User.IsInRole("ProjectManager") || User.IsInRole("Admin")))
                {
                    <form asp-action="UpdateStatus">
                        <input hidden name="ticketId" value="@Model.Id" />
                        <input hidden name="statusName" value="Development" />
                        <button class="btn btn-block btn-success" type="submit">Reopen Ticket to Development status</button>
                    </form>
                }
                <hr />
                <div class="row">
                    <div class="col-12">

                        <h5>
                            Add a Comment
                        </h5>
                        <form asp-action="Create" asp-controller="TicketComments" method="POST">
                            <div class="form-group">
                                <input type="hidden" class="form-control" name="TicketId" id="TicketId" value="@Model.Id">
                                <textarea id="summernote" name="Comment" required placeholder="Type your comment here">
              </textarea>
                                <button type="submit" class="btn btn-primary">Post Comment</button>
                            </div>
                        </form>


                        <h4>Ticket Comments</h4>
                        <hr />
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="card">
                                <div class="card-body">

                                    <div class="post">
                                        <div class="user-block">
                                            <img class="img-circle img-bordered-sm" src="../../dist/img/user1-128x128.jpg" alt="user image">
                                            <span class="username">
                                                <a href="#">@comment.User.FullName</a>
                                                @if (Model.DeveloperUserId == comment.UserId)
                                                {
                                                    <span class="text-success">Assigned developer</span>
                                                }@*else if ((await _projectService.GetProjectManagerAsync(Model.ProjectId)).Id == comment.UserId) {
                                                        <span class="text-primary">Project Manager</span>
                                                    }*@else if (Model.OwnerUserId == comment.UserId)
                                                {
                                                    <span class="text-danger">Submitter</span>
                                                }
                                            </span>
                                            <span class="description">@string.Format("{0:MMM dd yyyy}", comment.Created)</span>
                                        </div>
                                        <!-- /.user-block -->
                                        <p>
                                            @Html.Raw(comment.Comment)
                                        </p>
                                        @*Potential comment edit*@
                                        @*@if (_userManager.GetUserId(User) == comment.UserId)
                                                              {


                                                                  <p>
                                                                      <button type="button" data-toggle="modal" data-target="#modal-@comment.Id" class="btn btn-warning"><i class="far fa-pencil mr-1"></i> Edit comment</button>
                                                                  </p>
                                                                  <div class="modal fade" id="modal-@comment.Id" tabindex="-1" role="dialog"
                                                                       aria-labelledby="modelTitleId" aria-hidden="true">
                                                                      <div class="modal-dialog" role="document">
                                                                          <div class="modal-content">
                                                                              <div class="modal-header">
                                                                                  <h5 class="modal-title">Edit your comment</h5>
                                                                                  <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                                      <span aria-hidden="true">&times;</span>
                                                                                  </button>
                                                                              </div>
                                                                              <div class="modal-body">
                                                                                  <form asp-controller="TicketComments" asp-action="Edit">
                                                                                      <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                                                                      <div class="form-group">
                                                                                      <input type="hidden" value="@comment.Id" name="id" />
                                                                                      <input type="hidden" asp-for="@comment.Id" />
                                                                                      <input type="hidden" asp-for="@comment.TicketId" />
                                                                                      <input type="hidden" asp-for="@comment.UserId" />
                                                                                      <input type="hidden" asp-for="@comment.Created" />


                                                                                          <label asp-for="@comment.Comment" class="control-label"></label>
                                                                                          <textarea id="summernote" class="summernoteEditComment" name="Comment" required placeholder="Type your comment here">
                                            </textarea>
                                                                                          <span asp-validation-for="@comment.Comment" class="text-danger"></span>
                                                                                      </div>
                                                                                      <div class="form-group">
                                                                                          <input type="submit" value="Save" class="btn btn-primary" />
                                                                                      </div>
                                                                                  </form>

                                                                              </div>
                                                                          </div>
                                                                      </div>
                                                                  </div>

                                                              }*@
                                    </div>
                                </div>
                            </div>
                        }


                    </div>
                </div>
            </div>
            <div class="col-12 col-md-12 col-lg-4 order-1 order-md-2">
                <div class="small-box" id="ticketTypeBox">
                    <div class="inner">

                        <h3>Type:</h3>
                        <p id="ticketTypeText">@Model.TicketType.Name</p>
                    </div>
                    <div class="icon">
                        <i class="far fa-sticky-note"></i>
                    </div>
                </div>
                @* Javascript needed, check contents of one of the spans, then toggle class of this element based on that*@
                <div class="small-box" id="ticketPriorityBox">
                    <div class="inner">

                        <h3>Priority:</h3>
                        <p id="ticketPriorityText">@Model.TicketPriority.Name</p>
                    </div>
                    <div class="icon">
                        <i class="fas fa-exclamation"></i>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header">

                        @* TODO: icon based on ticket type? *@
                        <h3 class="text-primary"><i class="fas fa-bug"></i>@Model.Title</h3>
                        <p class="text-muted">@Model.Description</p>
                    </div>
                    <div class="card-body">

                        <div class="text-muted">
                            <p class="text-sm">
                                Company
                                <b class="d-block">@Model.Project.Company.Name</b>
                            </p>
                            <p class="text-sm">
                                Project

                                <a asp-controller="Projects" asp-action="Details" asp-route-id="@Model.ProjectId"><b class="d-block">@Model.Project.Name</b></a>
                            </p>
                            <p class="text-sm">
                                Project Description
                                <b class="d-block">@Model.Project.Description</b>
                            </p>
                        </div>

                        @if (Model.DeveloperUserId is not null && (User.IsInRole("ProjectManager") || User.IsInRole("Admin")))
                        {
                            <form asp-action="AssignUser">
                                <input hidden name="ticketId" value="@Model.Id" />
                                <div class="form-group pt-0">
                                    <label for=""></label>
                                    <select required class="form-control" asp-for="DeveloperUserId" name="userId" id="" asp-items="ViewBag.AssignUsers">
                                        <option value="" hidden>Choose a new User</option>

                                    </select>
                                </div>
                                <button type="submit" class="btn btn-danger btn-block">Reassign User</button>
                            </form>

                        }
                        else if (User.IsInRole("ProjectManager") || User.IsInRole("Admin"))
                        {

                            <form asp-action="AssignUser">
                                <input hidden name="ticketId" value="@Model.Id" />
                                <div class="form-group">
                                    <label for=""></label>
                                    <select required class="form-control" asp-for="DeveloperUserId" name="userId" id="" asp-items="ViewBag.AssignUsers">
                                        <option value="" hidden>Choose a User</option>

                                    </select>
                                </div>
                                <button type="submit" class="btn btn-danger">Assign User</button>
                            </form>
                        }
                        <h5 class="mt-5 text-muted">Ticket Attachments</h5>
                        <ul class="list-unstyled">
                            @foreach (var attachment in Model.Attachments)
                            {

                                <li>
                                    <a href="" class="btn-link text-secondary"><i class="far fa-fw fa-file"></i> @attachment.FileName</a>
                                </li>
                            }
                        </ul>
                        <div class="text-center mt-5 mb-3">
                            <a href="#" class="btn btn-sm btn-primary">Add files</a>
                            <a href="#" class="btn btn-sm btn-warning">Report contact</a>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <!-- /.card-body -->
</div>
<!-- /.card -->
<!-- Timelime example  -->
<div class="row">
    <div class="col-md-12">
        <h3>Ticket History</h3>
        <!-- The time line -->
        <div class="timeline">
            @{
                DateTime? today = Model.History.OrderByDescending(h => h.Created).FirstOrDefault()?.Created.Date;
                var labelNum = 0;
                List<string> colorList = new();
                colorList.Add("bg-danger");
                colorList.Add("bg-success");
                colorList.Add("bg-primary");
                colorList.Add("bg-orange");
                colorList.Add("bg-olive");
                colorList.Add("bg-warning");
            }
            @foreach (var historyItem in Model.History.OrderByDescending(h => h.Created))
            {
                //this creates a new time label for each day
                if (today != historyItem.Created.Date || historyItem.Id == Model.History.OrderByDescending(h=> h.Created).FirstOrDefault().Id)
                {
                    today = historyItem.Created.Date;
                    var timeclass = colorList[labelNum % 6];
                    <div class="time-label">
                        <span class="@timeclass">@string.Format("{0:MMM dd yyyy}",historyItem.Created.Date)</span>
                    </div>
                    labelNum++;
                }
                <!-- timeline time label -->
                <!-- /.timeline-label -->
                <!-- timeline item -->
                <div>
                    @if (historyItem.Property == "Title")
                    {
                        <i class="fas fa-ticket-alt bg-lightblue"></i>
                    }
                    else if (historyItem.Property == "Description")
                    {
                        <i class="far fa-file-alt bg-info"></i>
                    }
                    else if (historyItem.Property == "Developer User")
                    {
                        <i class="fas fa-user bg-warning"></i>
                    }
                    else if (historyItem.Property == "Ticket Type")
                    {
                        <i class="fas fa-align-justify bg-teal"></i>
                    }
                    else if (historyItem.Property == "Ticket Status")
                    {
                        <i class="fas fa-tasks bg-olive"></i>
                    }
                    else if (historyItem.Property == "Ticket Priority")
                    {
                        <i class="fas fa-exclamation-triangle bg-purple"></i>
                    }
                    else if (historyItem.Property == "")
                    {
                        <i class="far fa-file bg-success"></i>
                    }

                    <div class="timeline-item">
                        <span class="time"><i class="fas fa-clock"></i> @string.Format("{0:hh:mm tt}", historyItem.Created)</span>
                        <h3 class="timeline-header">@historyItem.User.FullName</h3>

                        <div class="timeline-body">
                            @historyItem.Description
                        </div>
                    </div>
                </div>
            }
            <div>
                <i class="fas fa-clock bg-gray"></i>
            </div>
        </div>
    </div>
    <!-- /.col -->
</div>

@section Scripts{
    <script src="../../plugins/summernote/summernote-bs4.min.js"></script>
    <script src="~/js/ticketDetails.js"></script>
    <script>
        $(function () {
            // Summernote
            $('#summernote').summernote()
            $('.summernoteEditComment').summernote()
        })
        $(window).on("load", ticketPriBgColor());
        $(window).on("load", ticketStatusBgColor());
        $(window).on("load", ticketTypeBgColor());
    </script>
}
